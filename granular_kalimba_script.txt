{***************************************************
Granular Kalimba Script
Author: Miguel González del Río
Modified: July 16th, 2025
****************************************************}

{
    Tasks:                          
    - Add reverb and delay functions
}

on init
    load_performance_view( "perfView.nckp" )
    {message( "Granular Kalimba Loaded" )}
    set_script_title( "Granular Synth Script" )

    set_snapshot_type( 0 ) {0 = load the entire init callback, 1 = loads only the on persistence_changed callback}



    {Useful Variables}
    declare const $ui_wait := 1500000
    declare %callback_ids[100]



    {Background Animation Declaration}
    declare ui_slider $animation(0,124)
    set_control_par( get_ui_id( $animation ), $CONTROL_PAR_Z_LAYER, -1 )
    set_control_par(get_ui_id($animation), $CONTROL_PAR_POS_X, 390)
    set_control_par(get_ui_id($animation), $CONTROL_PAR_POS_Y, 50)
    set_control_par_str(get_ui_id($animation), $CONTROL_PAR_PICTURE, "animation")
    set_listener($NI_SIGNAL_TIMER_MS, 15000) {25 frames per second}




    {Group Declarations}
    declare $instrument_number := 2
    declare $a
    declare $b

    declare %group[4]
    %group[0] := 0              {Kalimba Group}
    %group[1] := 1              {Reverse Kalimba Group}
    %group[2] := 2              {Rain Effect Group}
    %group[3] := 3              {Reverse Rain Effect Group}
 
    declare %instrument_active[2]
    %instrument_active[0] := 1  {Kalimba Active}
    %instrument_active[1] := 0  {Rain Effect Active}

    declare %instrument_reverse[2]
    %instrument_reverse[0] := 0  {Kalimba Reverse}
    %instrument_reverse[1] := 0  {Rain Effect Reverse}

    declare %instrument_position[2]
    %instrument_position[0] := 0 {Kalimba Position}
    %instrument_position[1] := 0 {Rain Effect Position}

    declare ?instrument_position_randomness[2]
    ?instrument_position_randomness[0] := 0.0 {Kalimba Position Randomness}
    ?instrument_position_randomness[1] := 0.0 {Rain Effect Position Randomness}


    {Kalimba Group}
    declare ui_button $kalimba_toggle_button                    {Button to toggle kalimba}
    set_control_par( get_ui_id( $kalimba_toggle_button ), $CONTROL_PAR_WIDTH, 50 )
    set_control_par_str( get_ui_id( $kalimba_toggle_button ), $CONTROL_PAR_TEXT, "Kalimba" )
    declare ui_button $kalimba_reverse_button                   {Button to toggle reversed grains}
    set_control_par( get_ui_id( $kalimba_reverse_button ), $CONTROL_PAR_WIDTH, 55 )
    set_control_par_str( get_ui_id( $kalimba_reverse_button ), $CONTROL_PAR_TEXT, "Reversed" )

    declare ui_slider $kalimba_position(0, 1000000 )            {kalimba_position slider for grain playback}
    declare ui_label $kalimba_position_label( 1, 1 )
        set_control_par_str( get_ui_id( $kalimba_position_label ), $CONTROL_PAR_TEXT, "POSITION" ) 

    declare ui_slider $kalimba_position_random(0, 1000000 )     {kalimba_position slider for grain playback}
    declare ui_label $kalimba_position_random_label( 1, 1 )
        set_control_par_str( get_ui_id( $kalimba_position_random_label ), $CONTROL_PAR_TEXT, "RANDOM" )

    declare ui_slider $kalimba_volume(0, 1000000)                  {Volume knob for Kalimba}
    declare ui_label $kalimba_volume_label( 1, 1 )
        set_control_par_str( get_ui_id( $kalimba_volume_label ), $CONTROL_PAR_TEXT, "VOLUME" )

    declare ui_panel $kalimba_panel
    set_control_par( get_ui_id( $kalimba_panel ), $CONTROL_PAR_POS_X, 30 )
    set_control_par( get_ui_id( $kalimba_panel ), $CONTROL_PAR_POS_Y, 50 )

    set_control_par( get_ui_id( $kalimba_toggle_button ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    set_control_par( get_ui_id( $kalimba_toggle_button ), $CONTROL_PAR_POS_X, 0 )
    set_control_par( get_ui_id( $kalimba_toggle_button ), $CONTROL_PAR_POS_Y, 25 )

    set_control_par( get_ui_id( $kalimba_reverse_button ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    set_control_par( get_ui_id( $kalimba_reverse_button ), $CONTROL_PAR_POS_X, 60 )
    set_control_par( get_ui_id( $kalimba_reverse_button ), $CONTROL_PAR_POS_Y, 25 )
    
    set_control_par( get_ui_id( $kalimba_position ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    set_control_par( get_ui_id( $kalimba_position ), $CONTROL_PAR_POS_X, 155 )
    set_control_par( get_ui_id( $kalimba_position ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $kalimba_position_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    hide_part( $kalimba_position_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $kalimba_position_label ), $CONTROL_PAR_POS_X, 146)
    set_control_par( get_ui_id( $kalimba_position_label ), $CONTROL_PAR_POS_Y, 50 )

    set_control_par( get_ui_id( $kalimba_position_random ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    set_control_par( get_ui_id( $kalimba_position_random ), $CONTROL_PAR_POS_X, 225 )
    set_control_par( get_ui_id( $kalimba_position_random ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $kalimba_position_random_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    hide_part( $kalimba_position_random_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $kalimba_position_random_label ), $CONTROL_PAR_POS_X, 216)
    set_control_par( get_ui_id( $kalimba_position_random_label ), $CONTROL_PAR_POS_Y, 50 )

    set_control_par( get_ui_id( $kalimba_volume ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    set_control_par( get_ui_id( $kalimba_volume ), $CONTROL_PAR_POS_X, 295 )
    set_control_par( get_ui_id( $kalimba_volume ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $kalimba_volume_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $kalimba_panel ) )
    hide_part( $kalimba_volume_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $kalimba_volume_label ), $CONTROL_PAR_POS_X, 286)
    set_control_par( get_ui_id( $kalimba_volume_label ), $CONTROL_PAR_POS_Y, 50 )

    {Rain Stick Group}
    declare ui_button $rain_stick_toggle_button
    set_control_par( get_ui_id( $rain_stick_toggle_button ), $CONTROL_PAR_WIDTH, 60 )
    set_control_par_str( get_ui_id( $rain_stick_toggle_button ), $CONTROL_PAR_TEXT, "Rain Stick" )
    declare ui_button $rain_stick_reverse_button
    set_control_par( get_ui_id( $rain_stick_reverse_button ), $CONTROL_PAR_WIDTH, 55 )
    set_control_par_str( get_ui_id( $rain_stick_reverse_button ), $CONTROL_PAR_TEXT, "Reversed" )

    declare ui_slider $rain_stick_position(0, 1000000 )         { slider for grain playback}
    declare ui_label $rain_position_label( 1, 1 )
        set_control_par_str( get_ui_id( $rain_position_label ), $CONTROL_PAR_TEXT, "POSITION" )

    declare ui_slider $rain_stick_position_random(0, 1000000 )         {kalimba_position slider for grain playback}
    declare ui_label $rain_stick_position_random_label( 1, 1 )
        set_control_par_str( get_ui_id( $rain_stick_position_random_label ), $CONTROL_PAR_TEXT, "RANDOM" )

    declare ui_slider $rain_stick_volume(0, 1000000)                  {Volume knob for Rain Stick}
    declare ui_label $rain_stick_volume_label( 1, 1 )
        set_control_par_str( get_ui_id( $rain_stick_volume_label ), $CONTROL_PAR_TEXT, "VOLUME" )

    declare ui_panel $rain_stick_panel
    set_control_par( get_ui_id( $rain_stick_panel ), $CONTROL_PAR_POS_X, 20 )
    set_control_par( get_ui_id( $rain_stick_panel ), $CONTROL_PAR_POS_Y, 120 )

    set_control_par( get_ui_id( $rain_stick_toggle_button ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    set_control_par( get_ui_id( $rain_stick_toggle_button ), $CONTROL_PAR_POS_X, 5 )
    set_control_par( get_ui_id( $rain_stick_toggle_button ), $CONTROL_PAR_POS_Y, 25 )

    set_control_par( get_ui_id( $rain_stick_reverse_button ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    set_control_par( get_ui_id( $rain_stick_reverse_button ), $CONTROL_PAR_POS_X, 70 )
    set_control_par( get_ui_id( $rain_stick_reverse_button ), $CONTROL_PAR_POS_Y, 25 )

    set_control_par( get_ui_id( $rain_stick_position ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    set_control_par( get_ui_id( $rain_stick_position ), $CONTROL_PAR_POS_X, 165 )
    set_control_par( get_ui_id( $rain_stick_position ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $rain_position_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    hide_part( $rain_position_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $rain_position_label ), $CONTROL_PAR_POS_X, 156)
    set_control_par( get_ui_id( $rain_position_label ), $CONTROL_PAR_POS_Y, 50 )

    set_control_par( get_ui_id( $rain_stick_position_random ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    set_control_par( get_ui_id( $rain_stick_position_random ), $CONTROL_PAR_POS_X, 235 )
    set_control_par( get_ui_id( $rain_stick_position_random ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $rain_stick_position_random_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    hide_part( $rain_stick_position_random_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $rain_stick_position_random_label ), $CONTROL_PAR_POS_X, 226)
    set_control_par( get_ui_id( $rain_stick_position_random_label ), $CONTROL_PAR_POS_Y, 50 )

    set_control_par( get_ui_id( $rain_stick_volume ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) ) 
    set_control_par( get_ui_id( $rain_stick_volume ), $CONTROL_PAR_POS_X, 305 )
    set_control_par( get_ui_id( $rain_stick_volume ), $CONTROL_PAR_POS_Y, 15 )

    set_control_par( get_ui_id( $rain_stick_volume_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $rain_stick_panel ) )
    hide_part( $rain_stick_volume_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $rain_stick_volume_label ), $CONTROL_PAR_POS_X, 296)
    set_control_par( get_ui_id( $rain_stick_volume_label ), $CONTROL_PAR_POS_Y, 50 )




    {Granular Engine Parameters}
    declare ui_slider $grainAmount(1,100)               {Grains per second}
    declare $timebetweenGrains                          {time between grains in microseconds}
    declare $offset := 0                                {Offset for grain playback (Can be used for randomization later)}
    declare $grainID := 0                               {ID for the grain being played}
    declare ui_slider $grainDuration(45442, 696711)     {HOLD values for 1ms to 1000ms}
    declare $note_playing := 0                          {Flag to check if a note is playing}

    declare ui_slider $width_knob (0, 1000)              {width_knob for the grains}
    declare ui_label $width_label(1,1)
        set_control_par_str( get_ui_id( $width_label ), $CONTROL_PAR_TEXT, "WIDTH" )
    declare $new_id

    declare $count := 0

    declare ui_label $grainAmount_label(1,1)
        set_control_par_str( get_ui_id( $grainAmount_label ), $CONTROL_PAR_TEXT, "" ) 
    declare ui_label $grainDuration_label(1,1)
        set_control_par_str( get_ui_id( $grainDuration_label ), $CONTROL_PAR_TEXT, "" )




    {Poliphony Settings}
    declare %note_active[128]
    declare %evento_id[128]
    

    {Effect Settings}
        {Reverb}
    declare ui_slider $reverb_amount(0, 1000000) {Reverb amount}
    declare ui_label $reverb_amount_label(1,1)
        set_control_par_str( get_ui_id( $reverb_amount_label ), $CONTROL_PAR_TEXT, "AMOUNT" )
    
    declare ui_slider $reverb_pre_delay(0, 1000000) {Reverb pre-delay}
    declare ui_label $reverb_pre_delay_label(1,1)
        set_control_par_str( get_ui_id( $reverb_pre_delay_label ), $CONTROL_PAR_TEXT, "PRE-DELAY" )

    declare ui_slider $reverb_time(0, 1000000) {Reverb decay time}
    declare ui_label $reverb_time_label(1,1)
        set_control_par_str( get_ui_id( $reverb_time_label ), $CONTROL_PAR_TEXT, "TIME" )
    
    declare ui_slider $reverb_size(0, 1000000) {Reverb size}
    declare ui_label $reverb_size_label(1,1)
        set_control_par_str( get_ui_id( $reverb_size_label ), $CONTROL_PAR_TEXT, "SIZE" )
    
    declare ui_slider $reverb_stereo(0, 1000000) {Reverb stereo width}
    declare ui_label $reverb_stereo_label(1,1)
        set_control_par_str( get_ui_id( $reverb_stereo_label ), $CONTROL_PAR_TEXT, "STEREO" )

    declare ui_slider $reverb_low_shelf(0, 1000000) {Reverb low shelf}
    declare ui_label $reverb_low_shelf_label(1,1)
        set_control_par_str( get_ui_id( $reverb_low_shelf_label ), $CONTROL_PAR_TEXT, "LOW SHELF" )
    
    declare ui_slider $reverb_high_cut(0, 1000000) {Reverb high cut}
    declare ui_label $reverb_high_cut_label(1,1)
        set_control_par_str( get_ui_id( $reverb_high_cut_label ), $CONTROL_PAR_TEXT, "HIGH CUT" )

        {Filter}
    declare ui_slider $filter_lowcut(0, 1000000) {Filter low cut}
    declare ui_label $filter_lowcut_label(1,1)
        set_control_par_str( get_ui_id( $filter_lowcut_label ), $CONTROL_PAR_TEXT, "LOW CUT" )

    declare ui_slider $filter_lowcut_resonance(0, 1000000) {Filter low cut resonance}
    declare ui_label $filter_lowcut_resonance_label(1,1)
        set_control_par_str( get_ui_id( $filter_lowcut_resonance_label ), $CONTROL_PAR_TEXT, "LC RES" )

    declare ui_slider $filter_highcut(0, 1000000) {Filter high cut}
    declare ui_label $filter_highcut_label(1,1)
        set_control_par_str( get_ui_id( $filter_highcut_label ), $CONTROL_PAR_TEXT, "HIGH CUT" )    

    declare ui_slider $filter_highcut_resonance(0, 1000000) {Filter low cut resonance}
    declare ui_label $filter_highcut_resonance_label(1,1)
        set_control_par_str( get_ui_id( $filter_highcut_resonance_label ), $CONTROL_PAR_TEXT, "HC RES" )


    {Effects Panel}
    declare ui_panel $EffectsSettingsPanel
        {Reverb}
    set_control_par( get_ui_id( $reverb_amount ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_amount ), $CONTROL_PAR_POS_X, 500 )
    set_control_par( get_ui_id( $reverb_amount ), $CONTROL_PAR_POS_Y, 375 )

    set_control_par( get_ui_id( $reverb_amount_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_amount_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_amount_label ), $CONTROL_PAR_POS_X, 512 )
    set_control_par( get_ui_id( $reverb_amount_label ), $CONTROL_PAR_POS_Y, 440 )


    set_control_par( get_ui_id( $reverb_pre_delay ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_pre_delay ), $CONTROL_PAR_POS_X, 580 )
    set_control_par( get_ui_id( $reverb_pre_delay ), $CONTROL_PAR_POS_Y, 360 )

    set_control_par( get_ui_id( $reverb_pre_delay_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_pre_delay_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_pre_delay_label ), $CONTROL_PAR_POS_X, 568 )
    set_control_par( get_ui_id( $reverb_pre_delay_label ), $CONTROL_PAR_POS_Y, 395 )


    set_control_par( get_ui_id( $reverb_time ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_time ), $CONTROL_PAR_POS_X, 580 )
    set_control_par( get_ui_id( $reverb_time ), $CONTROL_PAR_POS_Y, 415 )

    set_control_par( get_ui_id( $reverb_time_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_time_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_time_label ), $CONTROL_PAR_POS_X, 580 )
    set_control_par( get_ui_id( $reverb_time_label ), $CONTROL_PAR_POS_Y, 450 )


    set_control_par( get_ui_id( $reverb_size ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_size ), $CONTROL_PAR_POS_X, 400 )
    set_control_par( get_ui_id( $reverb_size ), $CONTROL_PAR_POS_Y, 360 )

    set_control_par( get_ui_id( $reverb_size_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_size_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_size_label ), $CONTROL_PAR_POS_X, 402 )
    set_control_par( get_ui_id( $reverb_size_label ), $CONTROL_PAR_POS_Y, 395 )


    set_control_par( get_ui_id( $reverb_stereo ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_stereo ), $CONTROL_PAR_POS_X, 400 )
    set_control_par( get_ui_id( $reverb_stereo ), $CONTROL_PAR_POS_Y, 415 )

    set_control_par( get_ui_id( $reverb_stereo_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_stereo_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_stereo_label ), $CONTROL_PAR_POS_X, 395 )
    set_control_par( get_ui_id( $reverb_stereo_label ), $CONTROL_PAR_POS_Y, 450 )


    set_control_par( get_ui_id( $reverb_low_shelf ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_low_shelf ), $CONTROL_PAR_POS_X, 452 )
    set_control_par( get_ui_id( $reverb_low_shelf ), $CONTROL_PAR_POS_Y, 360 )

    set_control_par( get_ui_id( $reverb_low_shelf_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_low_shelf_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_low_shelf_label ), $CONTROL_PAR_POS_X, 440 )
    set_control_par( get_ui_id( $reverb_low_shelf_label ), $CONTROL_PAR_POS_Y, 395 )


    set_control_par( get_ui_id( $reverb_high_cut ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $reverb_high_cut ), $CONTROL_PAR_POS_X, 452 )
    set_control_par( get_ui_id( $reverb_high_cut ), $CONTROL_PAR_POS_Y, 415 )
    
    set_control_par( get_ui_id( $reverb_high_cut_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $reverb_high_cut_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $reverb_high_cut_label ), $CONTROL_PAR_POS_X, 445 )
    set_control_par( get_ui_id( $reverb_high_cut_label ), $CONTROL_PAR_POS_Y, 450 )

        {Filter}
    set_control_par( get_ui_id( $filter_lowcut ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $filter_lowcut ), $CONTROL_PAR_POS_X, 800 - 40 )
    set_control_par( get_ui_id( $filter_lowcut ), $CONTROL_PAR_POS_Y, 350 )

    set_control_par( get_ui_id( $filter_lowcut_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $filter_lowcut_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $filter_lowcut_label ), $CONTROL_PAR_POS_X, 855 - 40)
    set_control_par( get_ui_id( $filter_lowcut_label ), $CONTROL_PAR_POS_Y, 368 )

    set_control_par( get_ui_id( $filter_lowcut_resonance ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $filter_lowcut_resonance ), $CONTROL_PAR_POS_X, 770 )
    set_control_par( get_ui_id( $filter_lowcut_resonance ), $CONTROL_PAR_POS_Y, 425 )

    set_control_par( get_ui_id( $filter_lowcut_resonance_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $filter_lowcut_resonance_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $filter_lowcut_resonance_label ), $CONTROL_PAR_POS_X, 815)
    set_control_par( get_ui_id( $filter_lowcut_resonance_label ), $CONTROL_PAR_POS_Y, 432 )


    set_control_par( get_ui_id( $filter_highcut ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $filter_highcut ), $CONTROL_PAR_POS_X, 875 )
    set_control_par( get_ui_id( $filter_highcut ), $CONTROL_PAR_POS_Y, 350 )

    set_control_par( get_ui_id( $filter_highcut_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $filter_highcut_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $filter_highcut_label ), $CONTROL_PAR_POS_X, 930)
    set_control_par( get_ui_id( $filter_highcut_label ), $CONTROL_PAR_POS_Y, 368 )


    set_control_par( get_ui_id( $filter_highcut_resonance ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    set_control_par( get_ui_id( $filter_highcut_resonance ), $CONTROL_PAR_POS_X, 885 )
    set_control_par( get_ui_id( $filter_highcut_resonance ), $CONTROL_PAR_POS_Y, 425 )

    set_control_par( get_ui_id( $filter_highcut_resonance_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EffectsSettingsPanel ) )
    hide_part( $filter_highcut_resonance_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $filter_highcut_resonance_label ), $CONTROL_PAR_POS_X, 930)
    set_control_par( get_ui_id( $filter_highcut_resonance_label ), $CONTROL_PAR_POS_Y, 432 )


    {Envelope Parameters}
    declare ui_slider $amp_env_attack(0, 440650)        {Attack time. 440650 corresponds to 1000ms}
    declare ui_slider $amp_env_decay(0, 416791)         {Decay time. 416791 corresponds to 1000ms}

    declare ui_label $amp_env_attack_label(1,1)
    set_control_par_str( get_ui_id( $amp_env_attack_label ), $CONTROL_PAR_TEXT, "Attack" )
    declare ui_label $amp_env_decay_label(1,1)
    set_control_par_str( get_ui_id( $amp_env_decay_label ), $CONTROL_PAR_TEXT, "Decay" )




    {Default Values}
    set_control_par( get_ui_id( $grainAmount ), $CONTROL_PAR_DEFAULT_VALUE, 10 ) {Default grains per second}
    $timebetweenGrains := 1000000 / get_control_par(get_ui_id($grainAmount), $CONTROL_PAR_DEFAULT_VALUE) {Default time between grains in microseconds}
    set_control_par(get_ui_id($grainDuration), $CONTROL_PAR_DEFAULT_VALUE, 440650) {Default grain duration in milliseconds}
    set_control_par( get_ui_id($width_knob), $CONTROL_PAR_DEFAULT_VALUE, 500 )
    
    set_control_par( get_ui_id( $amp_env_attack ), $CONTROL_PAR_DEFAULT_VALUE, 200807 ) {Default attack value (200807 corresponds to 10ms)}
    set_control_par( get_ui_id( $amp_env_decay ), $CONTROL_PAR_DEFAULT_VALUE, 189935 ) {Default decay value (189935 corresponds to 10ms)}

    set_control_par( get_ui_id( $kalimba_volume ), $CONTROL_PAR_DEFAULT_VALUE, 629961 ) {Default volume for Kalimba (629961 corresponds to 0.0 dB)}
    set_control_par( get_ui_id( $rain_stick_volume ), $CONTROL_PAR_DEFAULT_VALUE, 629961 ) {Default volume for Rain Stick (629961 corresponds to 0.0 dB)}

        {Reverb}
    set_control_par( get_ui_id( $reverb_amount ), $CONTROL_PAR_DEFAULT_VALUE, 200000)       {Default reverb amount (396484 corresponds to 0.0 dB)}
    set_control_par( get_ui_id( $reverb_pre_delay ), $CONTROL_PAR_DEFAULT_VALUE, 80000 )    {Default pre-delay for reverb (80000 corresponds to 20ms)}
    set_control_par( get_ui_id( $reverb_time ), $CONTROL_PAR_DEFAULT_VALUE, 484259 )       {Default reverb time (200000 corresponds to 3 seconds)}
    set_control_par( get_ui_id( $reverb_size ), $CONTROL_PAR_DEFAULT_VALUE, 1000000 )    {Default reverb size (1000000 corresponds to 100% size)}
    set_control_par( get_ui_id( $reverb_stereo ), $CONTROL_PAR_DEFAULT_VALUE, 1000000 )    {Default reverb stereo width (500000 corresponds to 50% stereo width)}
    set_control_par( get_ui_id( $reverb_low_shelf ), $CONTROL_PAR_DEFAULT_VALUE, 750000 )   {Default reverb low shelf (750000 corresponds to -9.0 dB)}
    set_control_par( get_ui_id( $reverb_high_cut ), $CONTROL_PAR_DEFAULT_VALUE, 1000000 )   {Default reverb high cut (1000000 corresponds to 21 kHz)}

        {Filter}
    set_control_par( get_ui_id( $filter_lowcut ), $CONTROL_PAR_DEFAULT_VALUE, 0 ) {Default filter low cut (0 corresponds to 20 Hz)}
    set_control_par( get_ui_id( $filter_highcut ), $CONTROL_PAR_DEFAULT_VALUE, 1000000 ) {Default filter high cut (1000000 corresponds to 20 kHz)}




    {Granular Settings Panel}
    set_control_par( get_ui_id( $grainAmount ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )
    set_control_par( get_ui_id( $grainDuration ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )

    set_control_par( get_ui_id( $width_knob ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )
    set_control_par( get_ui_id( $width_knob ), $CONTROL_PAR_POS_X, 138 )

    set_control_par( get_ui_id( $grainAmount ), $CONTROL_PAR_POS_X, 0 )
    set_control_par( get_ui_id( $grainDuration ), $CONTROL_PAR_POS_Y, 60 )

    set_control_par( get_ui_id( $grainAmount_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )
    hide_part( $grainAmount_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $grainAmount_label ), $CONTROL_PAR_POS_X, 65)
    set_control_par( get_ui_id( $grainAmount_label ), $CONTROL_PAR_POS_Y, 25 )

    set_control_par( get_ui_id( $grainDuration_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )
    hide_part( $grainDuration_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $grainDuration_label ), $CONTROL_PAR_POS_X, 65 )
    set_control_par( get_ui_id( $grainDuration_label ), $CONTROL_PAR_POS_Y, 85 )

    set_control_par( get_ui_id( $width_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $GrainSettingsPanel ) )
    hide_part( $width_label, $HIDE_PART_BG )
    set_control_par( get_ui_id( $width_label ), $CONTROL_PAR_POS_X, 205 )
    set_control_par( get_ui_id( $width_label ), $CONTROL_PAR_POS_Y, 25 )




    {Envelope Settings Panel}
    set_control_par( get_ui_id( $amp_env_attack ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EnvelopeSettingsPanel ) )
    set_control_par( get_ui_id( $amp_env_decay ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EnvelopeSettingsPanel ) )

    set_control_par( get_ui_id( $amp_env_attack ), $CONTROL_PAR_POS_X, 3 )
    set_control_par( get_ui_id( $amp_env_attack ), $CONTROL_PAR_POS_Y, 28 )
    set_control_par( get_ui_id( $amp_env_decay ), $CONTROL_PAR_POS_X, 48 )
    set_control_par( get_ui_id( $amp_env_decay ), $CONTROL_PAR_POS_Y, 28 )

    set_control_par( get_ui_id( $amp_env_attack_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EnvelopeSettingsPanel ) )
    set_control_par( get_ui_id( $amp_env_decay_label ), $CONTROL_PAR_PARENT_PANEL, get_ui_id( $EnvelopeSettingsPanel ) )

    hide_part ($amp_env_attack_label,$HIDE_PART_BG)
    set_control_par( get_ui_id( $amp_env_attack_label ), $CONTROL_PAR_POS_X, 0 )
    set_control_par( get_ui_id( $amp_env_attack_label ), $CONTROL_PAR_POS_Y, 68 )

    hide_part ($amp_env_decay_label,$HIDE_PART_BG) 
    set_control_par( get_ui_id( $amp_env_decay_label ), $CONTROL_PAR_POS_X, 46 )
    set_control_par( get_ui_id( $amp_env_decay_label ), $CONTROL_PAR_POS_Y, 68 )




    {Changing pictures}
    set_control_par_str(get_ui_id($grainAmount), $CONTROL_PAR_PICTURE, "knob")
    set_control_par_str( get_ui_id( $grainDuration ), $CONTROL_PAR_PICTURE, "knob" )
    set_control_par_str( get_ui_id($width_knob), $CONTROL_PAR_PICTURE, "knob")

    set_control_par_str(get_ui_id( $amp_env_attack ), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($amp_env_decay), $CONTROL_PAR_PICTURE, "attack_decay_knob")

        {Kalimba}
    set_control_par_str(get_ui_id($kalimba_position), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($kalimba_position_random), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($kalimba_volume), $CONTROL_PAR_PICTURE, "attack_decay_knob")

        {Rain Stick}
    set_control_par_str(get_ui_id($rain_stick_position), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($rain_stick_position_random), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($rain_stick_volume), $CONTROL_PAR_PICTURE, "attack_decay_knob")

        {Reverb}
    set_control_par_str(get_ui_id($reverb_amount), $CONTROL_PAR_PICTURE, "knob")
    set_control_par_str(get_ui_id($reverb_pre_delay), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($reverb_time), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($reverb_size), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($reverb_stereo), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($reverb_low_shelf), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($reverb_high_cut), $CONTROL_PAR_PICTURE, "attack_decay_knob")

        {Filter}
    set_control_par_str(get_ui_id($filter_lowcut), $CONTROL_PAR_PICTURE, "knob2")
    set_control_par_str(get_ui_id($filter_lowcut_resonance), $CONTROL_PAR_PICTURE, "attack_decay_knob")
    set_control_par_str(get_ui_id($filter_highcut), $CONTROL_PAR_PICTURE, "knob2")
    set_control_par_str(get_ui_id($filter_highcut_resonance), $CONTROL_PAR_PICTURE, "attack_decay_knob")




    {Mouse Controls/Behaviour}
    declare const $mouse_behaviour := -2050
    set_control_par(get_ui_id($grainAmount), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($grainDuration), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($width_knob), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)

    set_control_par(get_ui_id($amp_env_attack), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)
    set_control_par(get_ui_id($amp_env_decay), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)

    set_control_par(get_ui_id($kalimba_position), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)
    set_control_par(get_ui_id($kalimba_position_random), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)
    set_control_par(get_ui_id($kalimba_volume), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)

    set_control_par( get_ui_id($rain_stick_position), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)
    set_control_par( get_ui_id($rain_stick_position_random), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)
    set_control_par( get_ui_id($rain_stick_volume), $CONTROL_PAR_MOUSE_BEHAVIOUR, -1050)

        {Reverb}
    set_control_par(get_ui_id($reverb_amount), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_pre_delay), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_time), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_size), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_stereo), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_low_shelf), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($reverb_high_cut), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)

        {Filter}
    set_control_par(get_ui_id($filter_lowcut), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($filter_lowcut_resonance), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($filter_highcut), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)
    set_control_par(get_ui_id($filter_highcut_resonance), $CONTROL_PAR_MOUSE_BEHAVIOUR, $mouse_behaviour)




    {Persistency}
    make_persistent( $grainAmount )
    make_persistent( $grainDuration )
    make_persistent( $width_knob )
    
    make_persistent( $grainAmount_label)
    make_persistent( $grainDuration_label)
    make_persistent( $width_label )

    make_persistent( $amp_env_attack )
    make_persistent( $amp_env_decay )

    make_persistent( $kalimba_toggle_button )
    make_persistent( $kalimba_reverse_button )
    make_persistent( $kalimba_position )
    make_persistent( $kalimba_position_random )
    make_persistent( $kalimba_volume )

    make_persistent( $rain_stick_toggle_button )
    make_persistent( $rain_stick_reverse_button )
    make_persistent( $rain_stick_position )
    make_persistent( $rain_stick_position_random ) 
    make_persistent( $rain_stick_volume )


    make_persistent( $reverb_amount )
    make_persistent( $reverb_pre_delay )
    make_persistent( $reverb_time )
    make_persistent( $reverb_size )
    make_persistent( $reverb_stereo )
    make_persistent( $reverb_low_shelf )
    make_persistent( $reverb_high_cut )

    make_persistent( $filter_lowcut )
    make_persistent( $filter_lowcut_resonance )
    make_persistent( $filter_highcut )

end on




on persistence_changed
    set_control_par_str(get_ui_id( $grainAmount_label ), $CONTROL_PAR_TEXT, get_control_par(get_ui_id( $grainAmount ), $CONTROL_PAR_VALUE) & " GRAINS")
    set_control_par_str( get_ui_id( $grainDuration_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_HOLD, 0, 0, -1 ) & " ms" )

    set_control_par_str( get_ui_id( $width_label ), $CONTROL_PAR_TEXT, "WIDTH" )

    $timebetweenGrains := 1000000 / get_control_par(get_ui_id($grainAmount), $CONTROL_PAR_VALUE) {update time between grains}


    %instrument_position[0] := $kalimba_position
    %instrument_position[1] := $rain_stick_position

    ?instrument_position_randomness[0] := real($kalimba_position_random ) / 1000000.0
    ?instrument_position_randomness[1] := real($rain_stick_position_random ) / 1000000.0

    set_engine_par($ENGINE_PAR_VOLUME, $kalimba_volume, 0, 0, -1) {Set volume for Kalimba}
    set_engine_par($ENGINE_PAR_VOLUME, $kalimba_volume, 1, 0, -1) {Set volume for Kalimba}

    set_engine_par($ENGINE_PAR_VOLUME, $rain_stick_volume, 2, 0, -1) {Set volume for Rain Stick}
    set_engine_par($ENGINE_PAR_VOLUME, $rain_stick_volume, 3, 0, -1) {Set volume for Rain Stick}

    {Activation of Instruments}
    if($kalimba_toggle_button = 1) {Activate Kalimba if the toggle button is active}
        %instrument_active[0] := 1
    else
        %instrument_active[0] := 0
    end if

    if($kalimba_reverse_button = 1) {Activate Kalimba Reverse if the toggle button is active}
        %instrument_reverse[0] := 1
    else
        %instrument_reverse[0] := 0
    end if

    if($rain_stick_toggle_button = 1) {Activate Rain Effect if the toggle button is active}
        %instrument_active[1] := 1
    else
        %instrument_active[1] := 0
    end if

    if($rain_stick_reverse_button = 1) {Activate Rain Effect Reverse if the toggle button is active}
        %instrument_reverse[1] := 1
    else
        %instrument_reverse[1] := 0
    end if

end on




on note
    ignore_event($EVENT_ID)

    %note_active[$EVENT_NOTE] := 1
    %evento_id[$EVENT_NOTE] := $EVENT_ID {Store the event ID for the note}

    while(%evento_id[$EVENT_NOTE] = $EVENT_ID and %note_active[$EVENT_NOTE] = 1)

            {First active/deactive the groups}
            $a := 0
            $b := 0
            while ( $a < $instrument_number )
                $b := $a * 2
                if(%instrument_active[$a] = 1)
                    if (%instrument_reverse[$a] = 0)        {If normal}
                        allow_group( %group[$b])
                        disallow_group( %group[$b + 1] ) 

                        set_engine_par( $ENGINE_PAR_MOD_TARGET_INTENSITY, %instrument_position[$a] + int( real( random( - %instrument_position[$a], 1000000 - %instrument_position[$a] ) ) * ?instrument_position_randomness[$a] ), %group[$b], get_mod_idx( %group[$b], "SAMPLE START" ), -1 )
                    else                                    {If reversed}
                        allow_group( %group[$b + 1])
                        disallow_group( %group[$b] ) 

                        set_engine_par( $ENGINE_PAR_MOD_TARGET_INTENSITY, (1000000) - (%instrument_position[$a] + int( real( random( - %instrument_position[$a], 1000000 - %instrument_position[$a] ) ) * ?instrument_position_randomness[$a] )), %group[$b + 1], get_mod_idx( %group[$b + 1], "SAMPLE START" ), -1 )
                    end if
                else
                    disallow_group( %group[$b] )
                    disallow_group( %group[$b + 1] )
                end if

                inc($a)
            end while

            {Set position (+ random) per isntrumnet}
            
            
            
        
            $new_id := play_note($EVENT_NOTE, $EVENT_VELOCITY, $offset, 0)
            change_pan( $new_id, random( - $width_knob, $width_knob), 0 )

            message( "PLAYING " & $EVENT_NOTE & " with ID: " & $EVENT_ID )
            wait($timebetweenGrains)
    end while
end on




on release
    %note_active[$EVENT_NOTE] := 0
    if(%evento_id[$EVENT_NOTE] = $EVENT_ID)
        %evento_id[$EVENT_NOTE] := 0 {Reset the event ID for the note}
    end if
end on



{Granular Settings}

on ui_control( $grainAmount )
    %callback_ids[0] := $NI_CALLBACK_ID
    $timebetweenGrains := 1000000 / get_control_par(get_ui_id($grainAmount), $CONTROL_PAR_VALUE) {update time between grains}
    set_control_par_str( get_ui_id( $grainAmount_label ), $CONTROL_PAR_TEXT, get_control_par(get_ui_id($grainAmount), $CONTROL_PAR_VALUE) & " GRAINS" )
end on

on ui_control( $grainDuration )
    %callback_ids[1] := $NI_CALLBACK_ID
    $count := 0
    while ( $count < $instrument_number * 2 )
        set_engine_par($ENGINE_PAR_HOLD, $grainDuration, $count, 0, -1)
        inc($count)
    end while
    
    set_control_par_str( get_ui_id( $grainDuration_label ), $CONTROL_PAR_TEXT, get_engine_par_disp($ENGINE_PAR_HOLD, 0, 0, -1) & " ms" )
end on

on ui_control( $amp_env_attack )
    %callback_ids[2] := $NI_CALLBACK_ID

    $count := 0
    while ( $count < $instrument_number * 2 )
        set_engine_par($ENGINE_PAR_ATTACK, $amp_env_attack, $count, 0, -1)
        inc($count)
    end while

    set_control_par_str( get_ui_id( $amp_env_attack_label ), $CONTROL_PAR_TEXT, get_engine_par_disp($ENGINE_PAR_ATTACK, 0, 0, -1) & " ms" )

    wait($ui_wait)
    if(%callback_ids[2] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($amp_env_attack_label), $CONTROL_PAR_TEXT, "Attack")
    end if
end on

on ui_control( $amp_env_decay )
    %callback_ids[3] := $NI_CALLBACK_ID

    $count := 0
    while ( $count < $instrument_number * 2)
        set_engine_par($ENGINE_PAR_DECAY, $amp_env_decay, $count, 0, -1)
        inc($count)
    end while

    set_control_par_str( get_ui_id( $amp_env_decay_label ), $CONTROL_PAR_TEXT, get_engine_par_disp($ENGINE_PAR_DECAY, 0, 0, -1) & " ms" )

    wait($ui_wait)
    if(%callback_ids[3] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($amp_env_decay_label), $CONTROL_PAR_TEXT, "Decay")
    end if
end on

on ui_control( $width_knob )
    %callback_ids[4] := $NI_CALLBACK_ID

     set_control_par_str( get_ui_id( $width_label ), $CONTROL_PAR_TEXT, $width_knob/10 & "%" )

     wait( $ui_wait )
     if( %callback_ids[4] = $NI_CALLBACK_ID )
        set_control_par_str( get_ui_id( $width_label ), $CONTROL_PAR_TEXT, "WIDTH" )
     end if
end on


{Kalimba Related}

on ui_control( $kalimba_toggle_button )
    %instrument_active[0] := $kalimba_toggle_button
end on

on ui_control( $kalimba_reverse_button )
    if($kalimba_reverse_button = 1)
        %instrument_reverse[0] := 1
    else
        %instrument_reverse[0] := 0
    end if
end on

on ui_control( $kalimba_position )
    %instrument_position[0] := $kalimba_position
end on

on ui_control( $kalimba_position_random )
    %callback_ids[5] := $NI_CALLBACK_ID
    ?instrument_position_randomness[0] := real($kalimba_position_random ) / 1000000.0

    set_control_par_str( get_ui_id( $kalimba_position_random_label ), $CONTROL_PAR_TEXT, "    " & $kalimba_position_random / 10000 & "%" )

    wait($ui_wait)
    if(%callback_ids[5] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($kalimba_position_random_label), $CONTROL_PAR_TEXT, "RANDOM")
    end if
end on

on ui_control( $kalimba_volume)
    %callback_ids[6] := $NI_CALLBACK_ID
    set_engine_par($ENGINE_PAR_VOLUME, $kalimba_volume, 0, 0, -1) {Set volume for Kalimba}
    set_engine_par($ENGINE_PAR_VOLUME, $kalimba_volume, 1, 0, -1) {Set volume for Kalimba}

    set_control_par_str( get_ui_id( $kalimba_volume_label ), $CONTROL_PAR_TEXT, "  " & get_engine_par_disp( $ENGINE_PAR_VOLUME, 0, 0, -1 ) & " dB" )

    wait($ui_wait)
    if(%callback_ids[6] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($kalimba_volume_label), $CONTROL_PAR_TEXT, "VOLUME")
    end if
end on

{Rain Stick Related}

on ui_control( $rain_stick_toggle_button )
    %instrument_active[1] := $rain_stick_toggle_button
end on

on ui_control( $rain_stick_reverse_button )
    if($rain_stick_reverse_button = 1)
        %instrument_reverse[1] := 1
    else
        %instrument_reverse[1] := 0
    end if
end on

on ui_control( $rain_stick_position )
    %instrument_position[1] := $rain_stick_position
end on

on ui_control( $rain_stick_position_random )
    %callback_ids[7] := $NI_CALLBACK_ID
    ?instrument_position_randomness[1] := real($rain_stick_position_random ) / 1000000.0

    set_control_par_str( get_ui_id( $rain_stick_position_random_label ), $CONTROL_PAR_TEXT, "    " & $rain_stick_position_random / 10000 & "%" )

    wait($ui_wait)
    if(%callback_ids[7] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($rain_stick_position_random_label), $CONTROL_PAR_TEXT, "RANDOM")
    end if
end on

on ui_control( $rain_stick_volume )
    %callback_ids[8] := $NI_CALLBACK_ID
    set_engine_par($ENGINE_PAR_VOLUME, $rain_stick_volume, 2, 0, -1) {Set volume for Rain Stick}
    set_engine_par($ENGINE_PAR_VOLUME, $rain_stick_volume, 3, 0, -1) {Set volume for Rain Stick}

    set_control_par_str( get_ui_id( $rain_stick_volume_label ), $CONTROL_PAR_TEXT, "  " & get_engine_par_disp( $ENGINE_PAR_VOLUME, 2, 0, -1 ) & " dB" )

    wait($ui_wait)
    if(%callback_ids[8] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($rain_stick_volume_label), $CONTROL_PAR_TEXT, "VOLUME")
    end if
end on


 
{Effects Related}
    {Reverb}
on ui_control( $reverb_amount )
    %callback_ids[9] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, $reverb_amount, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_amount_label ), $CONTROL_PAR_TEXT, "  " & get_engine_par_disp( $ENGINE_PAR_SEND_EFFECT_OUTPUT_GAIN, -1, 1, $NI_SEND_BUS ) & " dB" )

    wait($ui_wait)
    if(%callback_ids[9] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_amount_label), $CONTROL_PAR_TEXT, "AMOUNT")
    end if
end on

on ui_control( $reverb_pre_delay )
    %callback_ids[10] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_PREDELAY, $reverb_pre_delay, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_pre_delay_label ), $CONTROL_PAR_TEXT, "  " & get_engine_par_disp( $ENGINE_PAR_RV2_PREDELAY, -1, 1, $NI_SEND_BUS ) & " ms" )

    wait($ui_wait)
    if(%callback_ids[10] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_pre_delay_label), $CONTROL_PAR_TEXT, "PRE-DELAY")
    end if
end on

on ui_control( $reverb_time )
    %callback_ids[11] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_TIME, $reverb_time, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_time_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_RV2_TIME, -1, 1, $NI_SEND_BUS ) & " ms" )

    wait($ui_wait)
    if(%callback_ids[11] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_time_label), $CONTROL_PAR_TEXT, "TIME")
    end if
end on

on ui_control( $reverb_size )
    %callback_ids[12] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_SIZE, $reverb_size, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_size_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_RV2_SIZE, -1, 1, $NI_SEND_BUS ) & " %" )

    wait($ui_wait)
    if(%callback_ids[12] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_size_label), $CONTROL_PAR_TEXT, "SIZE")
    end if
end on

on ui_control( $reverb_stereo )
    %callback_ids[13] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_STEREO, $reverb_stereo, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_stereo_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_RV2_STEREO, -1, 1, $NI_SEND_BUS ) & " %" )

    wait($ui_wait)
    if(%callback_ids[13] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_stereo_label), $CONTROL_PAR_TEXT, "STEREO")
    end if
end on

on ui_control( $reverb_low_shelf )
    %callback_ids[14] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_LOWSHELF, $reverb_low_shelf, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_low_shelf_label ), $CONTROL_PAR_TEXT, "   " & get_engine_par_disp( $ENGINE_PAR_RV2_LOWSHELF, -1, 1, $NI_SEND_BUS ) & " dB" )

    wait($ui_wait)
    if(%callback_ids[14] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_low_shelf_label), $CONTROL_PAR_TEXT, "LOW SHELF")
    end if
end on

on ui_control( $reverb_high_cut )
    %callback_ids[15] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RV2_HIGHCUT, 1000000 - $reverb_high_cut, -1, 1, $NI_SEND_BUS )

    set_control_par_str( get_ui_id( $reverb_high_cut_label ), $CONTROL_PAR_TEXT, "   " & get_engine_par_disp( $ENGINE_PAR_RV2_HIGHCUT, -1, 1, $NI_SEND_BUS ) & " Hz" )

    wait($ui_wait)
    if(%callback_ids[15] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($reverb_high_cut_label), $CONTROL_PAR_TEXT, "HIGH CUT")
    end if
end on

    {Filter}
on ui_control( $filter_lowcut )
    %callback_ids[16] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_CUTOFF, $filter_lowcut, -1, 0, $NI_MAIN_BUS )
    set_control_par_str( get_ui_id( $filter_lowcut_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_CUTOFF, -1, 0, $NI_MAIN_BUS ) & " Hz" )
    wait($ui_wait)
    if(%callback_ids[16] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($filter_lowcut_label), $CONTROL_PAR_TEXT, "LOW CUT")
    end if
end on

on ui_control( $filter_lowcut_resonance )
    %callback_ids[17] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RESONANCE, $filter_lowcut_resonance, -1, 0, $NI_MAIN_BUS )
    set_control_par_str( get_ui_id( $filter_lowcut_resonance_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_RESONANCE, -1, 0, $NI_MAIN_BUS ) & " %" )
    wait($ui_wait)
    if(%callback_ids[17] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($filter_lowcut_resonance_label), $CONTROL_PAR_TEXT, "LC RES")
    end if
end on

on ui_control( $filter_highcut )
    %callback_ids[18] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_CUTOFF, $filter_highcut, -1, 1, $NI_MAIN_BUS )
    set_control_par_str( get_ui_id( $filter_highcut_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_CUTOFF, -1, 1, $NI_MAIN_BUS ) & " Hz" )
    wait($ui_wait)
    if(%callback_ids[18] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($filter_highcut_label), $CONTROL_PAR_TEXT, "HIGH CUT")
    end if
end on

on ui_control( $filter_highcut_resonance )
    %callback_ids[19] := $NI_CALLBACK_ID
    set_engine_par( $ENGINE_PAR_RESONANCE, $filter_highcut_resonance, -1, 1, $NI_MAIN_BUS )
    set_control_par_str( get_ui_id( $filter_highcut_resonance_label ), $CONTROL_PAR_TEXT, get_engine_par_disp( $ENGINE_PAR_RESONANCE, -1, 1, $NI_MAIN_BUS ) & " %" )
    wait($ui_wait)
    if(%callback_ids[19] = $NI_CALLBACK_ID)
        set_control_par_str(get_ui_id($filter_highcut_resonance_label), $CONTROL_PAR_TEXT, "HC RES")
    end if
end on



on listener
    if($animation = get_control_par( get_ui_id($animation), $CONTROL_PAR_MAX_VALUE ))
        $animation := 0
    else
        $animation := $animation + 1
    end if
end on 